@use '@/shared/theme' as *;
@use './tokens' as *;
@use './utils' as *;

@mixin button(
  $inline: $button-width,
  $block: $button-height,
  $bg: $color-bg-primary,
  $fg: $color-fg-primary,
  $bg-hover: $color-primary,
  $fg-hover: $color-on-primary
) {
  border: none;
  line-height: $block;
  text-align: center;
  color: $fg;
  background: $bg;
  cursor: pointer;
  transition: background-color 0.3s ease;
  padding-inline: rx(10);
  inline-size: $inline;
  block-size: $block;
  min-inline-size: rx(200);
  border-radius: rx(2);

  &:hover {
    background-color: $bg-hover;
    color: $fg-hover;
  }
}

@mixin link($fg: $color-fg-primary, $fg-hover: $color-primary, $px: 0, $py: 0) {
  background: transparent;
  cursor: pointer;
  text-decoration: none;
  padding: rx($py) rx($px);
  border: none;
  border-radius: 0;
  transition: color 0.2s ease;
  color: $fg;

  &:hover {
    color: $fg-hover;
  }
}

@mixin icon($size) {
  display: inline-block;
  width: $size;
  height: $size;
  font-size: $size;
  padding: 0;
}

@mixin page-container(
  $max-container-width: $defaultPageWidth,
  $top: $defaultPadding,
  $bot: $defaultPadding
) {
  inline-size: 100%;
  max-inline-size: rx($max-container-width);
  padding: $top $bot;
  margin: 0 auto;
}

@mixin container($max-container-width: 100%, $top: 0, $bot: 0) {
  inline-size: 100%;
  max-inline-size: rx($max-container-width);
  padding: rx($top) rx($bot);
  margin: 0 auto;
}

@mixin flex($gap: 0, $direction: column) {
  display: flex;
  flex-direction: $direction;
  gap: rx($gap);
}

@mixin grid($min, $gap) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min, 1fr));
  gap: $gap;
}
